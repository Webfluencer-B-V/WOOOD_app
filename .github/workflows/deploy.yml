name: Deploy

on:
  push:
    branches:
      - '**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 22
      ACT: ${{ env.ACT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Build app (single step: web + extensions)
        run: npm run build

      - name: Inject runtime vars into wrangler.json
        if: ${{ vars.CF_GIT_INTEGRATION != 'true' }}
        run: |
          node -e "const fs=require('fs');const p='build/server/wrangler.json';const j=JSON.parse(fs.readFileSync(p,'utf8'));j.vars=j.vars||{};j.vars.DUTCH_FURNITURE_BASE_URL=process.env.DFB;j.vars.DUTCHNED_API_URL=process.env.DNA;fs.writeFileSync(p,JSON.stringify(j,null,2));console.log('Updated vars in',p);"
        env:
          DFB: ${{ vars.DUTCH_FURNITURE_BASE_URL }}
          DNA: ${{ vars.DUTCHNED_API_URL }}

      - name: Deploy Cloudflare Worker (staging)
        if: github.ref == 'refs/heads/staging' && env.ACT != 'true'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          command: deploy -c wrangler.json --keep-vars

      - name: Deploy Cloudflare Worker (production)
        if: github.ref == 'refs/heads/production' && env.ACT != 'true'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          command: deploy -c wrangler.production.json --keep-vars

      - name: Simulate deploy with wrangler (act)
        if: env.ACT == 'true'
        run: |
          npm ci
          npm run build
          npx wrangler deploy -c wrangler.json --dry-run --outdir .wrangler-dryrun

      # Optional: Deploy Shopify app (uncomment when CI auth is configured)
      # - name: Deploy Shopify app
      #   run: npm run deploy:shopify
      #   env:
      #     SHOPIFY_FLAG_FORCE: true
      #     SHOPIFY_CLI_TTY: 0
      #   if: github.ref == 'refs/heads/main'

  # Removed duplicate legacy deploy stanza
