name: Cloudflare

concurrency:
  group: cloudflare
  cancel-in-progress: true

on:
  push:
    branches:
      - '**'
    tags:
      - 'releases/*'
  workflow_dispatch: {}

env:
  NODE_VERSION: 22
  WRANGLER_SEND_METRICS: false
  BRANCH_STAGING: ${{ vars.BRANCH_STAGING || 'staging' }}
  BRANCH_PRODUCTION: ${{ vars.BRANCH_PRODUCTION || 'production' }}

jobs:
  build:
    name: Build
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci
      - name: Build web (React Router)
        run: npm run build:web
      - name: Build app (Shopify CLI)
        run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: build

  deploy-staging:
    name: Deploy (Staging)
    needs: build
    if: ${{ github.ref == format('refs/heads/{0}', (vars.BRANCH_STAGING || 'staging')) && vars.CF_GIT_INTEGRATION != 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Prepare built wrangler config (staging)
        run: |
          jq -s '.[0] * { main: .[1].main, assets: .[1].assets }' wrangler.json build/server/wrangler.json > build/server/wrangler.staging.json
      - name: Deploy Cloudflare Worker (staging)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          command: deploy -c build/server/wrangler.staging.json --keep-vars

  deploy-production:
    name: Deploy (Production)
    needs: build
    if: ${{ github.ref == format('refs/heads/{0}', (vars.BRANCH_PRODUCTION || 'production')) && vars.CF_GIT_INTEGRATION != 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Prepare built wrangler config (production)
        run: |
          jq -s '.[0] * { main: .[1].main, assets: .[1].assets }' wrangler.production.json build/server/wrangler.json > build/server/wrangler.production.json
      - name: Deploy Cloudflare Worker (production)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          command: deploy -c build/server/wrangler.production.json --keep-vars


