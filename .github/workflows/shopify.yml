name: Shopify

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
    tags: [releases/*]

env:
  SHOPIFY_CLI_NO_ANALYTICS: true
  NODE_VERSION: '22'

jobs:
  build:
    name: Build
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}
    runs-on: ubuntu-latest
    environment: staging
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: npm ci
      - name: Install date-picker deps
        run: npm ci --no-audit --no-fund --prefix extensions/date-picker
      - run: npm install -g @shopify/cli@latest
      - run: npx shopify app build
        env:
          SHOPIFY_API_KEY: ${{ vars.SHOPIFY_API_KEY }}
          SHOPIFY_APP_URL: ${{ vars.SHOPIFY_APP_URL }}
      - uses: actions/upload-artifact@v4
        with:
          name: extensions
          path: extensions

  deploy:
    name: Deploy
    if: ${{ github.ref_type == 'branch' }}
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: extensions
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: npm install -g @shopify/cli@latest
      - name: Install date-picker deps
        run: npm ci --no-audit --no-fund --prefix extensions/date-picker
      - run: npx shopify app deploy --force --message="${{ github.ref_name }}" --no-release --source-control-url="$COMMIT_URL" --version="deploy_${{ github.sha }}"
        env:
          COMMIT_URL: ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}
          SHOPIFY_CLI_PARTNERS_TOKEN: ${{ secrets.SHOPIFY_CLI_PARTNERS_TOKEN }}
          SHOPIFY_APP_URL: ${{ vars.SHOPIFY_APP_URL }}

  release:
    name: Release
    if: ${{ github.ref_type == 'tag' }}
    needs: build
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: extensions
          path: extensions
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: npm install -g @shopify/cli@latest
      - name: Install date-picker deps
        run: npm ci --no-audit --no-fund --prefix extensions/date-picker
      - name: Read package.json version
        id: pkg
        run: |
          PKG_VERSION=$(node -p "require('./package.json').version")
          echo "version=$PKG_VERSION" >> "$GITHUB_OUTPUT"
      - name: Extract version from tag
        id: version
        run: |
          VERSION=$(echo "${{ github.ref_name }}" | sed 's/^releases\///')
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
      - name: Ensure tag matches package.json version
        run: |
          if [ "${{ steps.pkg.outputs.version }}" != "${{ steps.version.outputs.version }}" ]; then
            echo "Tag version (${{ steps.version.outputs.version }}) does not match package.json (${{ steps.pkg.outputs.version }})" >&2
            exit 1
          fi
      - run: npx shopify app release --force --version="release-${{ steps.pkg.outputs.version }}"
        env:
          SHOPIFY_CLI_PARTNERS_TOKEN: ${{ secrets.SHOPIFY_CLI_PARTNERS_TOKEN }}
          SHOPIFY_APP_URL: ${{ vars.SHOPIFY_APP_URL }}
